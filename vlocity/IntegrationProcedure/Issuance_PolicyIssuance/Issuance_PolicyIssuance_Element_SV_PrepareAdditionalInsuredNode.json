{
    "CurrencyIsoCode": "PEN",
    "IsActive": true,
    "IsOmniScriptEmbeddable": false,
    "Name": "SV_PrepareAdditionalInsuredNode",
    "OmniProcessId": {
        "Name": "PS_PolicyIssuance",
        "VlocityDataPackType": "VlocityMatchingKeyObject",
        "VlocityMatchingRecordSourceKey": "OmniProcess/Issuance/PolicyIssuance/Procedure",
        "VlocityRecordSObjectType": "OmniProcess"
    },
    "ParentElementId": {
        "Name": "CB_TeleventasValidations",
        "OmniProcessId": {
            "Name": "PS_PolicyIssuance",
            "VlocityDataPackType": "VlocityMatchingKeyObject",
            "VlocityMatchingRecordSourceKey": "OmniProcess/Issuance/PolicyIssuance/Procedure",
            "VlocityRecordSObjectType": "OmniProcess"
        },
        "VlocityDataPackType": "VlocityMatchingKeyObject",
        "VlocityMatchingRecordSourceKey": "OmniProcessElement/OmniProcess/Issuance/PolicyIssuance/Procedure/CB_TeleventasValidations",
        "VlocityRecordSObjectType": "OmniProcessElement"
    },
    "ParentElementName": "CB_TeleventasValidations",
    "ParentElementType": "Conditional Block",
    "PropertySetConfig": {
        "actionMessage": "",
        "chainOnStep": false,
        "disOnTplt": false,
        "elementValueMap": {
            "apiname": "=IF(\r\n    ISBLANK(%data:additionalInsured%),\r\n    \"additionalInsured\",\r\n    $Vlocity.null\r\n)",
            "key": "=IF(\r\n    ISBLANK(%data:additionalInsured%),\r\n    \"obligatorio\",\r\n    $Vlocity.null\r\n)"
        },
        "executionConditionalFormula": "%SV_CheckProduct:televentasFamiliar% && ISBLANK(%filterErrorList%)",
        "failOnStepError": true,
        "failureConditionalFormula": "",
        "label": "SetValues19",
        "responseJSONNode": "",
        "responseJSONPath": "",
        "show": null
    },
    "Type": "Set Values",
    "VlocityDataPackType": "SObject",
    "VlocityRecordSObjectType": "OmniProcessElement",
    "VlocityRecordSourceKey": "OmniProcessElement/OmniProcess/Issuance/PolicyIssuance/Procedure/SV_PrepareAdditionalInsuredNode"
}